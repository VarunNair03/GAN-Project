import streamlit as st
from keras.models import load_model
import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt
import time

# loading the models
gen_model = load_model('gen.keras')
clf = load_model('fashion_3.keras')


'''
    Function that returns the generated images based on the user's choice.
    Works by classifying the generated images and only selecting the ones that match the user's choice.
'''
def SelectImages(num_images, choice):
    imgs = gen_model(tf.random.normal((20, 28)))
    preds = clf.predict(imgs)
    final_imgs = []
    i = 0
    while True:
        if len(final_imgs) == num_images:
            break
        if i == 19:
            imgs = gen_model(tf.random.normal((20, 28)))
            preds = clf.predict(imgs)
            i = 0
        if choice == options[np.argmax(preds[i])]:
            final_imgs.append(imgs[i])
        i += 1
    return final_imgs



'''
    Plotting the images generated by the GAN.
'''
def plot_images(num_images, choice):
    if num_images == 0:
        st.warning('Please select the number of images to generate')
        return
    with st.spinner('Generating Images...'): 
        
        imgs = SelectImages(num_images, choice)
        if num_images == 1:
            fig, ax = plt.subplots(ncols=1,figsize=(2, 2))
        else:
            fig, ax = plt.subplots(ncols=num_images, nrows=1)
        for i, image in enumerate(imgs):
            if num_images == 1:
                ax.imshow(image)
                ax.axis('off')
            else:
                ax[i].imshow(image)
                ax[i].axis('off')
        # time.sleep(1.5)
    st.pyplot(fig)

st.title('Fashion Generative Adversarial Network')


# Normal User interface
number  = 0
choice = None
with st.container(border=True):
    st.header('User Preferences')
    c1,c2 = st.columns([2,1])
    with c1:
        options = ['T-shirt/top', 'Trouser', 'Pullover', 'Dress', 'Coat', 'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']
        choice = st.selectbox('Select a Category', options)
    with c2:
        number = st.slider('Number of Images', 0, 10, 1)

with st.container(border=True):
    st.header('Generated Images')
    if choice is not None:
        plot_images(number, choice)
    



